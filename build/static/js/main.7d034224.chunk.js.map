{"version":3,"sources":["components/QuestionsResults.js","components/QuestionsSlider.js","components/QuestionsBox.js","App.js","index.js"],"names":["QuestionsResults","answers","setAnswers","showResult","useState","results","setResults","DESC","setDESC","useEffect","forEach","item","color","currentA","correctA","newItem","className","difficulty","question","style","oldItems","onClick","key","sort","a","b","transform","width","height","viewBox","fill","xmlns","d","QuestionsSlider","questions","activeQ","ckeckIt","el","correct_answer","replace","newArray","filter","element","arrQuestions","i","arrVariants","incorrect_answers","push","variantsToRender","Set","map","index","labelString","console","log","type","id","name","value","onChange","htmlFor","e","questionString","display","questionToRender","QuestionsBox","setStart","setActiveQ","finallBtn","setFinallBtn","setShowResult","length","opacity","zIndex","disabled","App","start","setQuestions","fetch","then","response","json","result","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d034224.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './style.scss';\n\nconst QuestionsResults = ({ answers, setAnswers, showResult }) => {\n\n  const [results, setResults] = useState([]);\n  const [DESC, setDESC] = useState(false)\n\n  useEffect(() => {\n    if (showResult === true) {\n        setResults([]);\n        answers.forEach((item) => {\n            const color = item.currentA === item.correctA ? 'rgb(104 245 46)' : 'rgb(245 46 110)'\n            const newItem = (\n                <tr className='questions__results__item'>\n                <td>{item.difficulty}</td>\n                <td>{item.question}</td>\n                <td style={{ color: color }}>{item.currentA}</td>\n                <td style={{ color: color }}>{item.correctA}</td>\n                </tr>\n            )\n            setResults((oldItems) => [...oldItems, newItem])\n        })\n    }\n  }, [answers])\n\n  const sortData = (key) => {\n      setAnswers([ ...answers].sort((a, b) => {\n        if (a[key] > b[key]) {\n            return DESC ? 1 : -1\n          }\n          if (a[key] < b[key]) {\n            return DESC ? -1 : 1\n          }\n          return 0\n      }))\n      setDESC(!DESC)\n  }\n    \n  return (\n        <table className='questions__results'>\n          <thead>\n            <tr className='questions__results__item'>\n              <th>\n                difficulty\n                <span\n                    onClick={() => {sortData('difficulty')}}\n                    style={{ transform: DESC ? 'rotate(180deg)' : 'rotate(0deg)' }}\n                  >\n                    <svg width=\"18\" height=\"10\" viewBox=\"0 0 18 10\" fill=\"#b8c4fb\" xmlns=\"http://www.w3.org/2000/svg\">\n                      <path d=\"M0.515015 1.46501L9.00001 9.95001L17.485 1.46501L16.071 0.0500126L9.00001 7.12201L1.92901 0.0500126L0.515015 1.46501Z\"/>\n                    </svg>\n                  </span>\n              </th>\n              <th>question</th>\n              <th>ur answer</th>\n              <th>correct answer</th>\n            </tr>\n          </thead>\n          <tbody>\n            {results}\n          </tbody>\n        </table>\n  );\n}\n  \nexport default QuestionsResults;","import React from 'react';\nimport './style.scss';\n\nconst QuestionsSlider = ({ questions, activeQ, answers, setAnswers }) => {\n\n  const ckeckIt = (item, el) => {\n    // костыль из-за кривых данных\n    const newCorrect = item.correct_answer.replace(/&quot;/g, \"'\").replace(/&#039;/g, \"'\").replace(/&amp;/g, \"&\");\n    const newEl = el.replace(/&quot;/g, \"'\").replace(/&#039;/g, \"'\").replace(/&amp;/g, \"&\");\n    const newQ = item.question.replace(/&quot;/g, \"'\").replace(/&#039;/g, \"'\").replace(/&amp;/g, \"&\");\n      \n    const newItem = {\n        correctA: newCorrect,\n        currentA: newEl,\n        question: newQ,\n        difficulty: item.difficulty\n    }\n    const newArray = answers.filter(element => element.question !== item.question)\n    setAnswers(newArray);\n    setAnswers((oldItems) => [...oldItems, newItem])\n  }\n  \n\n  const questionToRender = () => {\n    const arrQuestions = []\n    if (questions) {\n\n      questions.forEach((item, i) => {\n\n        let arrVariants = item.incorrect_answers;\n        arrVariants.push(item.correct_answer);\n        const uniqVariants = [...new Set(arrVariants)];\n\n        const variantsToRender = uniqVariants.map((el, index) => {\n\n          const labelString = el.replace(/&quot;/g, \"'\").replace(/&#039;/g, \"'\").replace(/&amp;/g, \"&\")\n          //   if (item.type !== 'multiple') {\n          if (typeof item.correct_answer === 'string') {\n            console.log('index === ', index);\n            return (\n                <div key={`${i}.${index}`}>\n                  <input \n                    type='radio' \n                    id={`${i}.${index}`} \n                    name={item.question.replace(/ /g,\"_\")} value={el} \n                    onChange={() => ckeckIt(item, el)}\n                  />\n                  <label htmlFor={`${i}.${index}`}> {labelString} </label>\n                </div>\n            )\n          } else {\n            return (\n                <div key={`${i}.${index}`}>\n                  <input \n                    type='checkbox' \n                    id={`${i}.${index}`} \n                    name={item.question.replace(/ /g,\"_\")}\n                    onChange={(e) => ckeckIt(item, el)} //, e.target)}\n                  />\n                  <label htmlFor={`${i}.${index}`}> {labelString} </label>\n                </div>\n            )\n          }\n        })\n\n        const questionString = item.question.replace(/&quot;/g, \"'\").replace(/&#039;/g, \"'\").replace(/&amp;/g, \"&\")\n          \n        arrQuestions.push(\n          <div \n            key={i}\n            className='questions__slider__item'\n            style={{ \n              display: activeQ === i ? 'flex' : 'none'\n            }}\n          >\n            <h2>№{i+1}. {questionString}</h2>\n            <div className='questions__slider__item__answers'>\n              {variantsToRender}\n            </div>\n            <p>difficulty level: <br /> {item.difficulty}</p>\n\n          </div>\n        )\n      });\n    }\n\n    return arrQuestions\n  }\n    \n  return (\n    <div className='questions__slider'>\n        {questionToRender()}\n    </div>\n  );\n}\n  \nexport default QuestionsSlider;","import React, { useEffect, useState } from 'react';\nimport QuestionsResults from './QuestionsResults';\nimport QuestionsSlider from './QuestionsSlider';\nimport './style.scss';\n\nconst QuestionsBox = ({ questions, setStart }) => {\n\n  const [activeQ, setActiveQ] = useState(0);\n  const [finallBtn, setFinallBtn] = useState(false);\n  const [answers, setAnswers] = useState([]);\n  const [showResult, setShowResult] = useState(false);\n\n  useEffect(() => {\n    console.log('answers.length === ', answers);\n    if (questions && answers.length === questions.length) setFinallBtn(true)\n  }, [answers])\n\n  const prevQ = () => {\n    if (activeQ !== 0) {\n      setActiveQ( activeQ - 1 )\n    } else return\n  }\n\n  const nextQ = () => {\n    if (activeQ < questions.length - 1) {\n      setActiveQ( activeQ + 1 )\n    } else return\n  }\n    \n  return (\n    <section className='questions'>\n      { !showResult ? \n        <QuestionsSlider questions={questions} activeQ={activeQ} answers={answers} setAnswers={setAnswers} />\n        :\n        <QuestionsResults answers={answers} setAnswers={setAnswers} showResult={showResult} setShowResult={setShowResult} />\n      }\n        \n      <div className='questions__nav'>\n      { !showResult ? \n        <>\n          <button \n          onClick={() => prevQ()}\n          disabled={activeQ === 0 ? true : false}\n          >\n            prev quetion\n          </button>\n\n          <button \n            onClick={() => nextQ()}\n            disabled={activeQ === questions.length - 1 ? true : false}\n          >\n            next question\n          </button>\n\n          <button \n            onClick={() => setShowResult(true)} \n            disabled={!finallBtn ? true : false}\n          >\n            finish him\n          </button>\n        </>\n        :\n          <button \n            onClick={() => setStart(false)} \n            style={{ opacity: finallBtn ? 1 : 0, zIndex: finallBtn ? '0' : '-5'}}\n          >\n            try again!\n          </button>\n      }\n      </div>\n    </section>\n  );\n}\n  \nexport default QuestionsBox;","import { useEffect, useState } from 'react';\nimport './App.scss';\nimport QuestionsBox from './components/QuestionsBox';\n\nconst App = () => {\n\n  const [start, setStart] = useState(false);\n  const [questions, setQuestions] = useState();\n\n  const url = 'https://opentdb.com/api.php?amount=10';\n\n  useEffect(() => {\n    fetch(url)\n    .then(response => response.json())\n    .then(result => setQuestions(result.results))\n  }, [start])\n  \n  return (\n    <div className=\"container\">\n      { start && questions ? \n        <QuestionsBox questions={questions} setStart={setStart} />\n        : <button onClick={() => setStart(true)}>cick here to start testing</button>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}